import numpy as np
import pandas as pd
import math
import sympy
from sympy import symbols, expand

S = 10000 # бюджет
N = 100 # количество ценных бумаг
#P = np.arange(1, 101, 1) # стоимость 
data = np.loadtxt("task-1-stocks.csv",skiprows=1,delimiter=",")
P = data[:, -1]

# n_max 
n_k_max = {}
for count, p in enumerate(P):
    n_k_max[f"var_{count}"] = int(S / p)
    
# d_k

d = {}
for count, p in enumerate(P):
    d[f"var_{count}"] = int(math.log2(n_k_max[f"var_{count}"]))
    
summ = 0
for d_in in d.values():
    summ+= int(d_in)
    
zeros_matrix = np.array([[0]*N]*summ)

y = {}
start_position = 0
for d_in in d:
    index = d_in.replace('var_', '')
    for i in range(summ):
        j = int(index)
        end_position = d[f"var_{j}"] + start_position
        
        if i >= start_position and i < end_position:
            y[f"var_{i}_{j}"] = f"y_{i}_{j}"
        else:
#             print(i,j)
            y[f"var_{i}_{j}"] = zeros_matrix[i, j]
    start_position += d[f"var_{index}"]
    
a = np.array([['0']*N]*summ, dtype=object)


for i in range(summ):
    for j in range(N):
        a[i,j] = str(y[f"var_{i}_{j}"])

y_0_0, y_1_0, y_2_0, y_3_0, y_4_0, y_5_0, y_6_0, y_7_0, y_8_0, y_9_0, y_10_0, y_11_0, y_12_0, y_13_1, y_14_1, y_15_1, y_16_1, y_17_1, y_18_1, y_19_1, y_20_1, y_21_1, y_22_1, y_23_1, y_24_1, y_25_2, y_26_2, y_27_2, y_28_2, y_29_2, y_30_2, y_31_2, y_32_2, y_33_2, y_34_2, y_35_2, y_36_3, y_37_3, y_38_3, y_39_3, y_40_3, y_41_3, y_42_3, y_43_3, y_44_3, y_45_3, y_46_3, y_47_4, y_48_4, y_49_4, y_50_4, y_51_4, y_52_4, y_53_4, y_54_4, y_55_4, y_56_4, y_57_5, y_58_5, y_59_5, y_60_5, y_61_5, y_62_5, y_63_5, y_64_5, y_65_5, y_66_5, y_67_6, y_68_6, y_69_6, y_70_6, y_71_6, y_72_6, y_73_6, y_74_6, y_75_6, y_76_6, y_77_7, y_78_7, y_79_7, y_80_7, y_81_7, y_82_7, y_83_7, y_84_7, y_85_7, y_86_7, y_87_8, y_88_8, y_89_8, y_90_8, y_91_8, y_92_8, y_93_8, y_94_8, y_95_8, y_96_8, y_97_9, y_98_9, y_99_9, y_100_9, y_101_9, y_102_9, y_103_9, y_104_9, y_105_9, y_106_10, y_107_10, y_108_10, y_109_10, y_110_10, y_111_10, y_112_10, y_113_10, y_114_10, y_115_11, y_116_11, y_117_11, y_118_11, y_119_11, y_120_11, y_121_11, y_122_11, y_123_11, y_124_12, y_125_12, y_126_12, y_127_12, y_128_12, y_129_12, y_130_12, y_131_12, y_132_12, y_133_13, y_134_13, y_135_13, y_136_13, y_137_13, y_138_13, y_139_13, y_140_13, y_141_13, y_142_14, y_143_14, y_144_14, y_145_14, y_146_14, y_147_14, y_148_14, y_149_14, y_150_14, y_151_15, y_152_15, y_153_15, y_154_15, y_155_15, y_156_15, y_157_15, y_158_15, y_159_15, y_160_16, y_161_16, y_162_16, y_163_16, y_164_16, y_165_16, y_166_16, y_167_16, y_168_16, y_169_17, y_170_17, y_171_17, y_172_17, y_173_17, y_174_17, y_175_17, y_176_17, y_177_17, y_178_18, y_179_18, y_180_18, y_181_18, y_182_18, y_183_18, y_184_18, y_185_18, y_186_18, y_187_19, y_188_19, y_189_19, y_190_19, y_191_19, y_192_19, y_193_19, y_194_19, y_195_20, y_196_20, y_197_20, y_198_20, y_199_20, y_200_20, y_201_20, y_202_20, y_203_21, y_204_21, y_205_21, y_206_21, y_207_21, y_208_21, y_209_21, y_210_21, y_211_22, y_212_22, y_213_22, y_214_22, y_215_22, y_216_22, y_217_22, y_218_22, y_219_23, y_220_23, y_221_23, y_222_23, y_223_23, y_224_23, y_225_23, y_226_23, y_227_24, y_228_24, y_229_24, y_230_24, y_231_24, y_232_24, y_233_24, y_234_24, y_235_25, y_236_25, y_237_25, y_238_25, y_239_25, y_240_25, y_241_25, y_242_25, y_243_26, y_244_26, y_245_26, y_246_26, y_247_26, y_248_26, y_249_26, y_250_26, y_251_27, y_252_27, y_253_27, y_254_27, y_255_27, y_256_27, y_257_27, y_258_27, y_259_28, y_260_28, y_261_28, y_262_28, y_263_28, y_264_28, y_265_28, y_266_28, y_267_29, y_268_29, y_269_29, y_270_29, y_271_29, y_272_29, y_273_29, y_274_29, y_275_30, y_276_30, y_277_30, y_278_30, y_279_30, y_280_30, y_281_30, y_282_30, y_283_31, y_284_31, y_285_31, y_286_31, y_287_31, y_288_31, y_289_31, y_290_31, y_291_32, y_292_32, y_293_32, y_294_32, y_295_32, y_296_32, y_297_32, y_298_32, y_299_33, y_300_33, y_301_33, y_302_33, y_303_33, y_304_33, y_305_33, y_306_33, y_307_34, y_308_34, y_309_34, y_310_34, y_311_34, y_312_34, y_313_34, y_314_34, y_315_35, y_316_35, y_317_35, y_318_35, y_319_35, y_320_35, y_321_35, y_322_35, y_323_36, y_324_36, y_325_36, y_326_36, y_327_36, y_328_36, y_329_36, y_330_36, y_331_37, y_332_37, y_333_37, y_334_37, y_335_37, y_336_37, y_337_37, y_338_37, y_339_38, y_340_38, y_341_38, y_342_38, y_343_38, y_344_38, y_345_38, y_346_38, y_347_39, y_348_39, y_349_39, y_350_39, y_351_39, y_352_39, y_353_39, y_354_40, y_355_40, y_356_40, y_357_40, y_358_40, y_359_40, y_360_40, y_361_41, y_362_41, y_363_41, y_364_41, y_365_41, y_366_41, y_367_41, y_368_42, y_369_42, y_370_42, y_371_42, y_372_42, y_373_42, y_374_42, y_375_43, y_376_43, y_377_43, y_378_43, y_379_43, y_380_43, y_381_43, y_382_44, y_383_44, y_384_44, y_385_44, y_386_44, y_387_44, y_388_44, y_389_45, y_390_45, y_391_45, y_392_45, y_393_45, y_394_45, y_395_45, y_396_46, y_397_46, y_398_46, y_399_46, y_400_46, y_401_46, y_402_46, y_403_47, y_404_47, y_405_47, y_406_47, y_407_47, y_408_47, y_409_47, y_410_48, y_411_48, y_412_48, y_413_48, y_414_48, y_415_48, y_416_48, y_417_49, y_418_49, y_419_49, y_420_49, y_421_49, y_422_49, y_423_49, y_424_50, y_425_50, y_426_50, y_427_50, y_428_50, y_429_50, y_430_50, y_431_51, y_432_51, y_433_51, y_434_51, y_435_51, y_436_51, y_437_51, y_438_52, y_439_52, y_440_52, y_441_52, y_442_52, y_443_52, y_444_52, y_445_53, y_446_53, y_447_53, y_448_53, y_449_53, y_450_53, y_451_53, y_452_54, y_453_54, y_454_54, y_455_54, y_456_54, y_457_54, y_458_54, y_459_55, y_460_55, y_461_55, y_462_55, y_463_55, y_464_55, y_465_55, y_466_56, y_467_56, y_468_56, y_469_56, y_470_56, y_471_56, y_472_56, y_473_57, y_474_57, y_475_57, y_476_57, y_477_57, y_478_57, y_479_57, y_480_58, y_481_58, y_482_58, y_483_58, y_484_58, y_485_58, y_486_58, y_487_59, y_488_59, y_489_59, y_490_59, y_491_59, y_492_59, y_493_59, y_494_60, y_495_60, y_496_60, y_497_60, y_498_60, y_499_60, y_500_60, y_501_61, y_502_61, y_503_61, y_504_61, y_505_61, y_506_61, y_507_61, y_508_62, y_509_62, y_510_62, y_511_62, y_512_62, y_513_62, y_514_62, y_515_63, y_516_63, y_517_63, y_518_63, y_519_63, y_520_63, y_521_63, y_522_64, y_523_64, y_524_64, y_525_64, y_526_64, y_527_64, y_528_64, y_529_65, y_530_65, y_531_65, y_532_65, y_533_65, y_534_65, y_535_65, y_536_66, y_537_66, y_538_66, y_539_66, y_540_66, y_541_66, y_542_66, y_543_67, y_544_67, y_545_67, y_546_67, y_547_67, y_548_67, y_549_67, y_550_68, y_551_68, y_552_68, y_553_68, y_554_68, y_555_68, y_556_68, y_557_69, y_558_69, y_559_69, y_560_69, y_561_69, y_562_69, y_563_69, y_564_70, y_565_70, y_566_70, y_567_70, y_568_70, y_569_70, y_570_70, y_571_71, y_572_71, y_573_71, y_574_71, y_575_71, y_576_71, y_577_71, y_578_72, y_579_72, y_580_72, y_581_72, y_582_72, y_583_72, y_584_72, y_585_73, y_586_73, y_587_73, y_588_73, y_589_73, y_590_73, y_591_73, y_592_74, y_593_74, y_594_74, y_595_74, y_596_74, y_597_74, y_598_74, y_599_75, y_600_75, y_601_75, y_602_75, y_603_75, y_604_75, y_605_75, y_606_76, y_607_76, y_608_76, y_609_76, y_610_76, y_611_76, y_612_76, y_613_77, y_614_77, y_615_77, y_616_77, y_617_77, y_618_77, y_619_77, y_620_78, y_621_78, y_622_78, y_623_78, y_624_78, y_625_78, y_626_79, y_627_79, y_628_79, y_629_79, y_630_79, y_631_79, y_632_80, y_633_80, y_634_80, y_635_80, y_636_80, y_637_80, y_638_81, y_639_81, y_640_81, y_641_81, y_642_81, y_643_81, y_644_82, y_645_82, y_646_82, y_647_82, y_648_82, y_649_82, y_650_83, y_651_83, y_652_83, y_653_83, y_654_83, y_655_83, y_656_84, y_657_84, y_658_84, y_659_84, y_660_84, y_661_84, y_662_85, y_663_85, y_664_85, y_665_85, y_666_85, y_667_85, y_668_86, y_669_86, y_670_86, y_671_86, y_672_86, y_673_86, y_674_87, y_675_87, y_676_87, y_677_87, y_678_87, y_679_87, y_680_88, y_681_88, y_682_88, y_683_88, y_684_88, y_685_88, y_686_89, y_687_89, y_688_89, y_689_89, y_690_89, y_691_89, y_692_90, y_693_90, y_694_90, y_695_90, y_696_90, y_697_90, y_698_91, y_699_91, y_700_91, y_701_91, y_702_91, y_703_91, y_704_92, y_705_92, y_706_92, y_707_92, y_708_92, y_709_92, y_710_93, y_711_93, y_712_93, y_713_93, y_714_93, y_715_93, y_716_94, y_717_94, y_718_94, y_719_94, y_720_94, y_721_94, y_722_95, y_723_95, y_724_95, y_725_95, y_726_95, y_727_95, y_728_96, y_729_96, y_730_96, y_731_96, y_732_96, y_733_96, y_734_97, y_735_97, y_736_97, y_737_97, y_738_97, y_739_97, y_740_98, y_741_98, y_742_98, y_743_98, y_744_98, y_745_98, y_746_99, y_747_99, y_748_99, y_749_99, y_750_99, y_751_99 = symbols('y_0_0 y_1_0 y_2_0 y_3_0 y_4_0 y_5_0 y_6_0 y_7_0 y_8_0 y_9_0 y_10_0 y_11_0 y_12_0 y_13_1 y_14_1 y_15_1 y_16_1 y_17_1 y_18_1 y_19_1 y_20_1 y_21_1 y_22_1 y_23_1 y_24_1 y_25_2 y_26_2 y_27_2 y_28_2 y_29_2 y_30_2 y_31_2 y_32_2 y_33_2 y_34_2 y_35_2 y_36_3 y_37_3 y_38_3 y_39_3 y_40_3 y_41_3 y_42_3 y_43_3 y_44_3 y_45_3 y_46_3 y_47_4 y_48_4 y_49_4 y_50_4 y_51_4 y_52_4 y_53_4 y_54_4 y_55_4 y_56_4 y_57_5 y_58_5 y_59_5 y_60_5 y_61_5 y_62_5 y_63_5 y_64_5 y_65_5 y_66_5 y_67_6 y_68_6 y_69_6 y_70_6 y_71_6 y_72_6 y_73_6 y_74_6 y_75_6 y_76_6 y_77_7 y_78_7 y_79_7 y_80_7 y_81_7 y_82_7 y_83_7 y_84_7 y_85_7 y_86_7 y_87_8 y_88_8 y_89_8 y_90_8 y_91_8 y_92_8 y_93_8 y_94_8 y_95_8 y_96_8 y_97_9 y_98_9 y_99_9 y_100_9 y_101_9 y_102_9 y_103_9 y_104_9 y_105_9 y_106_10 y_107_10 y_108_10 y_109_10 y_110_10 y_111_10 y_112_10 y_113_10 y_114_10 y_115_11 y_116_11 y_117_11 y_118_11 y_119_11 y_120_11 y_121_11 y_122_11 y_123_11 y_124_12 y_125_12 y_126_12 y_127_12 y_128_12 y_129_12 y_130_12 y_131_12 y_132_12 y_133_13 y_134_13 y_135_13 y_136_13 y_137_13 y_138_13 y_139_13 y_140_13 y_141_13 y_142_14 y_143_14 y_144_14 y_145_14 y_146_14 y_147_14 y_148_14 y_149_14 y_150_14 y_151_15 y_152_15 y_153_15 y_154_15 y_155_15 y_156_15 y_157_15 y_158_15 y_159_15 y_160_16 y_161_16 y_162_16 y_163_16 y_164_16 y_165_16 y_166_16 y_167_16 y_168_16 y_169_17 y_170_17 y_171_17 y_172_17 y_173_17 y_174_17 y_175_17 y_176_17 y_177_17 y_178_18 y_179_18 y_180_18 y_181_18 y_182_18 y_183_18 y_184_18 y_185_18 y_186_18 y_187_19 y_188_19 y_189_19 y_190_19 y_191_19 y_192_19 y_193_19 y_194_19 y_195_20 y_196_20 y_197_20 y_198_20 y_199_20 y_200_20 y_201_20 y_202_20 y_203_21 y_204_21 y_205_21 y_206_21 y_207_21 y_208_21 y_209_21 y_210_21 y_211_22 y_212_22 y_213_22 y_214_22 y_215_22 y_216_22 y_217_22 y_218_22 y_219_23 y_220_23 y_221_23 y_222_23 y_223_23 y_224_23 y_225_23 y_226_23 y_227_24 y_228_24 y_229_24 y_230_24 y_231_24 y_232_24 y_233_24 y_234_24 y_235_25 y_236_25 y_237_25 y_238_25 y_239_25 y_240_25 y_241_25 y_242_25 y_243_26 y_244_26 y_245_26 y_246_26 y_247_26 y_248_26 y_249_26 y_250_26 y_251_27 y_252_27 y_253_27 y_254_27 y_255_27 y_256_27 y_257_27 y_258_27 y_259_28 y_260_28 y_261_28 y_262_28 y_263_28 y_264_28 y_265_28 y_266_28 y_267_29 y_268_29 y_269_29 y_270_29 y_271_29 y_272_29 y_273_29 y_274_29 y_275_30 y_276_30 y_277_30 y_278_30 y_279_30 y_280_30 y_281_30 y_282_30 y_283_31 y_284_31 y_285_31 y_286_31 y_287_31 y_288_31 y_289_31 y_290_31 y_291_32 y_292_32 y_293_32 y_294_32 y_295_32 y_296_32 y_297_32 y_298_32 y_299_33 y_300_33 y_301_33 y_302_33 y_303_33 y_304_33 y_305_33 y_306_33 y_307_34 y_308_34 y_309_34 y_310_34 y_311_34 y_312_34 y_313_34 y_314_34 y_315_35 y_316_35 y_317_35 y_318_35 y_319_35 y_320_35 y_321_35 y_322_35 y_323_36 y_324_36 y_325_36 y_326_36 y_327_36 y_328_36 y_329_36 y_330_36 y_331_37 y_332_37 y_333_37 y_334_37 y_335_37 y_336_37 y_337_37 y_338_37 y_339_38 y_340_38 y_341_38 y_342_38 y_343_38 y_344_38 y_345_38 y_346_38 y_347_39 y_348_39 y_349_39 y_350_39 y_351_39 y_352_39 y_353_39 y_354_40 y_355_40 y_356_40 y_357_40 y_358_40 y_359_40 y_360_40 y_361_41 y_362_41 y_363_41 y_364_41 y_365_41 y_366_41 y_367_41 y_368_42 y_369_42 y_370_42 y_371_42 y_372_42 y_373_42 y_374_42 y_375_43 y_376_43 y_377_43 y_378_43 y_379_43 y_380_43 y_381_43 y_382_44 y_383_44 y_384_44 y_385_44 y_386_44 y_387_44 y_388_44 y_389_45 y_390_45 y_391_45 y_392_45 y_393_45 y_394_45 y_395_45 y_396_46 y_397_46 y_398_46 y_399_46 y_400_46 y_401_46 y_402_46 y_403_47 y_404_47 y_405_47 y_406_47 y_407_47 y_408_47 y_409_47 y_410_48 y_411_48 y_412_48 y_413_48 y_414_48 y_415_48 y_416_48 y_417_49 y_418_49 y_419_49 y_420_49 y_421_49 y_422_49 y_423_49 y_424_50 y_425_50 y_426_50 y_427_50 y_428_50 y_429_50 y_430_50 y_431_51 y_432_51 y_433_51 y_434_51 y_435_51 y_436_51 y_437_51 y_438_52 y_439_52 y_440_52 y_441_52 y_442_52 y_443_52 y_444_52 y_445_53 y_446_53 y_447_53 y_448_53 y_449_53 y_450_53 y_451_53 y_452_54 y_453_54 y_454_54 y_455_54 y_456_54 y_457_54 y_458_54 y_459_55 y_460_55 y_461_55 y_462_55 y_463_55 y_464_55 y_465_55 y_466_56 y_467_56 y_468_56 y_469_56 y_470_56 y_471_56 y_472_56 y_473_57 y_474_57 y_475_57 y_476_57 y_477_57 y_478_57 y_479_57 y_480_58 y_481_58 y_482_58 y_483_58 y_484_58 y_485_58 y_486_58 y_487_59 y_488_59 y_489_59 y_490_59 y_491_59 y_492_59 y_493_59 y_494_60 y_495_60 y_496_60 y_497_60 y_498_60 y_499_60 y_500_60 y_501_61 y_502_61 y_503_61 y_504_61 y_505_61 y_506_61 y_507_61 y_508_62 y_509_62 y_510_62 y_511_62 y_512_62 y_513_62 y_514_62 y_515_63 y_516_63 y_517_63 y_518_63 y_519_63 y_520_63 y_521_63 y_522_64 y_523_64 y_524_64 y_525_64 y_526_64 y_527_64 y_528_64 y_529_65 y_530_65 y_531_65 y_532_65 y_533_65 y_534_65 y_535_65 y_536_66 y_537_66 y_538_66 y_539_66 y_540_66 y_541_66 y_542_66 y_543_67 y_544_67 y_545_67 y_546_67 y_547_67 y_548_67 y_549_67 y_550_68 y_551_68 y_552_68 y_553_68 y_554_68 y_555_68 y_556_68 y_557_69 y_558_69 y_559_69 y_560_69 y_561_69 y_562_69 y_563_69 y_564_70 y_565_70 y_566_70 y_567_70 y_568_70 y_569_70 y_570_70 y_571_71 y_572_71 y_573_71 y_574_71 y_575_71 y_576_71 y_577_71 y_578_72 y_579_72 y_580_72 y_581_72 y_582_72 y_583_72 y_584_72 y_585_73 y_586_73 y_587_73 y_588_73 y_589_73 y_590_73 y_591_73 y_592_74 y_593_74 y_594_74 y_595_74 y_596_74 y_597_74 y_598_74 y_599_75 y_600_75 y_601_75 y_602_75 y_603_75 y_604_75 y_605_75 y_606_76 y_607_76 y_608_76 y_609_76 y_610_76 y_611_76 y_612_76 y_613_77 y_614_77 y_615_77 y_616_77 y_617_77 y_618_77 y_619_77 y_620_78 y_621_78 y_622_78 y_623_78 y_624_78 y_625_78 y_626_79 y_627_79 y_628_79 y_629_79 y_630_79 y_631_79 y_632_80 y_633_80 y_634_80 y_635_80 y_636_80 y_637_80 y_638_81 y_639_81 y_640_81 y_641_81 y_642_81 y_643_81 y_644_82 y_645_82 y_646_82 y_647_82 y_648_82 y_649_82 y_650_83 y_651_83 y_652_83 y_653_83 y_654_83 y_655_83 y_656_84 y_657_84 y_658_84 y_659_84 y_660_84 y_661_84 y_662_85 y_663_85 y_664_85 y_665_85 y_666_85 y_667_85 y_668_86 y_669_86 y_670_86 y_671_86 y_672_86 y_673_86 y_674_87 y_675_87 y_676_87 y_677_87 y_678_87 y_679_87 y_680_88 y_681_88 y_682_88 y_683_88 y_684_88 y_685_88 y_686_89 y_687_89 y_688_89 y_689_89 y_690_89 y_691_89 y_692_90 y_693_90 y_694_90 y_695_90 y_696_90 y_697_90 y_698_91 y_699_91 y_700_91 y_701_91 y_702_91 y_703_91 y_704_92 y_705_92 y_706_92 y_707_92 y_708_92 y_709_92 y_710_93 y_711_93 y_712_93 y_713_93 y_714_93 y_715_93 y_716_94 y_717_94 y_718_94 y_719_94 y_720_94 y_721_94 y_722_95 y_723_95 y_724_95 y_725_95 y_726_95 y_727_95 y_728_96 y_729_96 y_730_96 y_731_96 y_732_96 y_733_96 y_734_97 y_735_97 y_736_97 y_737_97 y_738_97 y_739_97 y_740_98 y_741_98 y_742_98 y_743_98 y_744_98 y_745_98 y_746_99 y_747_99 y_748_99 y_749_99 y_750_99 y_751_99 ')
zeroooo = symbols('0')

y_symbol_matrix = sympy.Matrix(a)

c = {}
start_position = 0
for d_in in d:
    index = d_in.replace('var_', '')
    for i in range(summ):
        end_position = d[f"var_{j}"] + start_position
        j = int(index)
        if i >= start_position and i < end_position:
            c[f"var_{i}_{j}"] = 2 ** (-start_position + i)
        else:
#             print(i,j)
            c[f"var_{i}_{j}"] = zeros_matrix[i, j]
    start_position += d[f"var_{index}"]
    
    
c_matrix = np.array([['0']*N]*summ, dtype=object)

for i in range(summ):
    for j in range(N):
        c_matrix[i,j] = int(c[f"var_{i}_{j}"])
        
        
c_matrix = np.array(c_matrix)
C = c_matrix.transpose()


data = np.loadtxt("task-1-stocks.csv",skiprows=1,delimiter=",")


# массив доходностей
r = np.zeros(( len(data[:,0])-1, len(data[0,:]) ))

# матрица ковариаций
sigma = np.zeros(( len(data[0,:]), len(data[0,:]) ))

# заполняем массив доходностей
for j in range(0, len(data[0,:])):
    for i in range(0, len(data[:,0])-1):
        r[i,j] = (data[i+1,j] - data[i,j])/data[i,j] 
                  
n = len(r[:,0])
for i in range(0, len(data[0,:])):
    for j in range(0, len(data[0,:])):
        summa = 0

        for k in range(0, n):
            summa += abs( (r[k,i] - np.mean(r[:,i]))*(r[k,j] - np.mean(r[:,j])) )

        sigma[i,j] = np.sqrt( summa*n/(n-1) )
        
        
r = np.mean(r, axis=0)
R = r.transpose()

R_i = 1/S * np.dot(R, np.dot(C, np.dot(y_symbol_matrix, P)))
Cond_1 = 1/np.dot(S, S) * np.dot(P.transpose(), np.dot(C, np.dot(y_symbol_matrix, np.dot(sigma, np.dot(C, np.dot(y_symbol_matrix, P))))))
stroka_eyes = np.array([1]* N)
Cond_2 = 1/S * np.dot(stroka_eyes.transpose(), np.dot(C, np.dot(y_symbol_matrix, P)))

# составлена матрица
Hamil = R_i + np.dot(Cond_1 - 0.04, Cond_1 - 0.04) + np.dot(Cond_2 - 1, Cond_2 - 1)

print(Hamil)
